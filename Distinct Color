#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define sz(x) static_cast<int32_t>(x.size())
vector<vector<int>> dp;
const int LOG=20;
const int max_n=200001;
vector<int>adj[max_n];
vector<int> color;
void dfs(int node,int par,vector<set<int>>& sub,vector<int>& ans){
	sub[node].insert(color[node]);
	for(auto it:adj[node]){
		if(it!=par){
			dfs(it,node,sub,ans);
			if(sz(sub[it]) > sz(sub[node]))
                swap(sub[it], sub[node]);
            sub[node].merge(sub[it]);
		}
	}
	ans[node]=sz(sub[node]);
}
void solve(){
    int n;
    cin>>n;
    color.resize(n,0);
    for(int i=0;i<n;i++)cin>>color[i];
    vector<int> ans(n,0);
    vector<set<int>> sub(n);
    for(int i=0;i<n-1;i++){
        int x,y;cin>>x>>y;
        x--;y--;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    dfs(0,-1,sub,ans);

    for(auto& x:ans)cout<<x<<" ";

    }
/* Main()  function */
int main()
{
solve();
return 0;
}
