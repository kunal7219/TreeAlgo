#include <bits/stdc++.h>
using namespace std;
#define ll long long
 
/* UTILS */
#define MOD 1000000007
#define PI 3.1415926535897932384626433832795
ll min(ll a,int b) { if (a<b) return a; return b; }
ll min(int a,ll b) { if (a<b) return a; return b; }
ll max(ll a,int b) { if (a>b) return a; return b; }
ll max(int a,ll b) { if (a>b) return a; return b; }
ll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }
ll lcm(ll a,ll b) { return a/gcd(a,b)*b; }
bool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }
void yes() { cout<<"YES\n"; }
void no() { cout<<"NO\n"; }
 
/*  All Required define Pre-Processors and typedef Constants */
typedef long int int32;
typedef unsigned long int uint32;
typedef long long int int64;
typedef unsigned long long int  uint64;
/* clang-format on */
vector<vector<int>> dp;
const int LOG=20;
const int max_n=200001;
vector<int>adj[max_n];
vector<int> depth;
void dfs(int a){
	for(auto b:adj[a]){
		depth[b]=depth[a]+1;
		dfs(b);
	}
}
void solve(){
	int n,q;
	cin>>n>>q;
	depth.resize(n+1,0);
	dp.resize(n+1,vector<int>(20,0));
	for(int i=2;i<=n;i++){
		int x;cin>>x;
		adj[x].push_back(i);
		dp[i][0]=x;
	}
	dfs(1);
	for(int j=1;j<=LOG-1;j++){
		for(int i=1;i<=n;i++){
			if(dp[i][j-1]!=-1)
			dp[i][j]=dp[dp[i][j-1]][j-1];
		}
	}
	while(q--){
		int a,b;
		cin>>a>>b;
		if(depth[a]<depth[b])swap(a,b);
		int k=depth[a]-depth[b];
		for(int j=LOG-1;j>=0;j--){
			if(k&(1<<j))
				a=dp[a][j];
		}
		if(a==b){
			cout<<a<<endl;
			continue;
		}
		for(int j=LOG-1;j>=0;j--){
			if(dp[a][j]!=dp[b][j]){
				a=dp[a][j];
				b=dp[b][j];
			}
		}
		cout<<dp[a][0]<<endl;
	}
	}
/* Main()  function */
int main()
{
	#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
 
solve();
 
return 0;
}
